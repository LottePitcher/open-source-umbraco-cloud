name: pipeline

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch: 

jobs:
  set-env:
    name: "Set Target Environment from Release or Branch"
    runs-on: ubuntu-latest
    outputs:
      targetEnv: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Set environment based on trigger
        id: set-env
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "Release published - deploying to live"
            echo "environment=live" >> $GITHUB_OUTPUT
          else
            echo "Push to main or manual trigger - deploying to stage"
            echo "environment=stage" >> $GITHUB_OUTPUT
          fi

  # Pack and upload the deployment Artifact
  cloud-artifact:
    name: "Prepare and Upload Artifact"
    needs: [set-env]
    uses: ./.github/workflows/cloud-artifact.yml
    with:
      pathToWebsite: "src/OpenSourceTest.Site"
      csprojFile: "OpenSourceTest.Site.csproj"
      pathToFrontendClient: "src/OpenSourceTest.MyExtension/Client"
    secrets:
      projectId: ${{ secrets.PROJECT_ID }}
      umbracoCloudApiKey: ${{ secrets.UMBRACO_CLOUD_API_KEY }}
      umbracoCloudJson: ${{ secrets.UMBRACO_CLOUD_JSON }}
      deployLicenseKey: ${{ secrets.DEPLOY_LICENSE_KEY }}
      formsLicenseKey: ${{ secrets.FORMS_LICENSE_KEY }}

  # Deploy to Umbraco Cloud
  cloud-deployment:
    name: "Deploy to Cloud"
    needs: [set-env, cloud-artifact]
    uses: ./.github/workflows/cloud-deployment.yml
    with:
      artifactId: ${{ needs.cloud-artifact.outputs.artifactId }}
      targetEnvironmentAlias: ${{ needs.set-env.outputs.targetEnv }}
    secrets:
      projectId: ${{ secrets.PROJECT_ID }}
      umbracoCloudApiKey: ${{ secrets.UMBRACO_CLOUD_API_KEY }}